name: Update container images

on:
  schedule:
    # Update the container images every morning at 05:00 (or 04:00, depending on whether daylight
    # savings time is on or not) CEST; skip Saturdays and Sundays. The hour in the expression below
    # is 03 because the timezone is in UTC.
    - cron: '0 3 * * 1-5'

jobs:
  get-branches-to-update-container-images:
    runs-on: ubuntu-latest
    outputs:
      branches: ${{ steps.get-branches-to-update-container-images.outputs.branches }}
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v2
    - name: Get branches to update container images
      id: get-branches-to-update-container-images
      run: |
        branches_to_update_container_images=$(git -P branch --list 'update_container_images_*') && \
        echo "::set-output name=branches::${branches_to_update_container_images}"

  update-container-images:
    runs-on: ubuntu-latest
    needs: get-branches-to-update-container-images
    # Proceed to create a new branch and a PR to update container images (if there are any updates)
    # if and only if there aren't already open branches to do that. The idea is that if there's an
    # already open branch it should be merged first, for example to avoid cumulating branches during
    # holidays, when no one will merge the PRs from said branches.
    if: ${{ needs.get-branches-to-update-container-images.outputs.branches == '' }}
    steps:
      #! REMOVE following step before opening PR.
      - id: install-aws-cli
        uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.A8S_ECR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.A8S_ECR_AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Store most recent version tag for each image
        env:
          REPO_NAMESPACE: a9s-ds-for-k8s/dev
          IMAGES: "postgresql-operator service-binding-controller backup-manager fluentd opensearch-dashboards"
        run: |
          VERSIONED_IMAGES=""
          for IMG in ${IMAGES[*]}
          do
            read NEW_VERSION <<< $(aws ecr-public describe-images \
              --repository-name $REPO_NAMESPACE/$IMG \
              --query 'sort_by(imageDetails, &imagePushedAt)[-1].imageTags[0]' \
              --output text \
              --region us-east-1)
              VERSIONED_IMAGES+="$IMG:$NEW_VERSION "
          done
          echo "VERSIONED_IMAGES=$VERSIONED_IMAGES" >> $GITHUB_ENV
      - name: Store current date to use it as a suffix for the name of the branch to update images
        id: get-date
        run: echo "::set-output name=date::$(date +'%d_%m_%Y')"
      - name: Checkout this repo
        uses: actions/checkout@v2
      - name: Update images if needed
        run: chmod +x update_images.sh && ./update_images.sh
          # echo a > deploy/mol-test-file && \
          # sed -i 's/a/b/' deploy/mol-test-file && \
          # git config user.name github-actions && \
          # git config user.email github-actions@github.com && \
          # git add deploy/mol-test-file && \
          # git commit -m "test-commit"
      - name: Create pull request if at least one image was updated
        uses: peter-evans/create-pull-request@v3
        with:
          delete-branch: true
          branch: 'update_container_images_${{ steps.get-date.outputs.date }}'
          # Strictly speaking this is not needed since 'develop' is picked as the base branch by
          # default when the action runs in github. But when testing the action locally on a
          # different branch that branch is picked instead, while we still want 'develop' as base.
          # So we set the parameter explicitly to ease local testing.
          base: 'develop'
          author: 'github-actions <github-actions@github.com>'
          title: 'Update Container Images'
          body: |
            Automated update of container images to new available versions.
            
            For the a8s core components (postgresql operator, backup manager, service binding
            controller), please check that a github release with the same name as the new version
            exists in the repo of the relevant component. If that's not the case, it's likely
            because the new image was pushed spuriusly during testing by a developer who forgot to
            delete it, so it's not a legitimate image and should NOT be used; remove the
            corresponding commit from this PR and delete the image from ECR.
