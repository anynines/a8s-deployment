apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: postgresqls.postgresql.anynines.com
spec:
  group: postgresql.anynines.com
  names:
    kind: Postgresql
    listKind: PostgresqlList
    plural: postgresqls
    shortNames:
    - pg
    singular: postgresql
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Postgresql is the Schema for the postgresqls API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PostgresqlSpec defines the desired state of Postgresql
            properties:
              postgresConfiguration:
                properties:
                  archiveTimeoutSeconds:
                    default: 0
                    description: ArchiveTimeoutSeconds is the timeout in seconds which
                      defines the limit how old unarchived data can be, you can set
                      ArchiveTimeoutSeconds to force the server to switch to a new
                      WAL segment file periodically. When this parameter is greater
                      than zero, the server will switch to a new segment file whenever
                      this amount of time has elapsed since the last segment file
                      switch.
                    maximum: 1073741823
                    minimum: 0
                    type: integer
                  clientMinMessages:
                    default: notice
                    description: ClientMinMessages specifies which message levels
                      are sent to the client.
                    enum:
                    - debug5
                    - debug4
                    - debug3
                    - debug2
                    - debug1
                    - log
                    - notice
                    - warning
                    - error
                    type: string
                  logErrorVerbosity:
                    default: DEFAULT
                    description: LogErrorVerbosity controls the amount of detail written
                      in the server log for each message that is logged.
                    enum:
                    - DEFAULT
                    - VERBOSE
                    - TERSE
                    type: string
                  logMinErrorStatement:
                    default: error
                    description: LogMinErrorStatement controls which SQL statements
                      that cause an error condition are recorded in the server log.
                      The current SQL statement is included in the log entry for any
                      message of the specified severity or higher.
                    enum:
                    - debug5
                    - debug4
                    - debug3
                    - debug2
                    - debug1
                    - info
                    - notice
                    - warning
                    - error
                    - log
                    - fatal
                    - panic
                    type: string
                  logMinMessages:
                    default: warning
                    description: LogMinMessages controls which message levels are
                      written to the server log.
                    enum:
                    - debug5
                    - debug4
                    - debug3
                    - debug2
                    - debug1
                    - info
                    - notice
                    - warning
                    - error
                    - log
                    - fatal
                    - panic
                    type: string
                  logStatement:
                    default: none
                    description: LogStatement controls which SQL statements are logged.
                    enum:
                    - none
                    - ddl
                    - mod
                    - all
                    type: string
                  maxConnections:
                    default: 100
                    description: MaxConnections determines the maximum number of concurrent
                      connections to the database server. Updating MaxConnections
                      will trigger a restart of the PostgreSQL instance.
                    maximum: 262143
                    type: integer
                  maxReplicationSlots:
                    default: 10
                    description: MaxReplicationSlots specifies the maximum number
                      of replication slots that the server can support. Updating MaxReplicationSlots
                      will trigger a restart of the PostgreSQL instance.
                    type: integer
                  maxWALSenders:
                    default: 10
                    description: MaxWALSenders specifies the maximum number of concurrent
                      connections from standby servers or streaming base backup clients
                      (i.e., the maximum number of simultaneously running WAL sender
                      processes). The value 0 means replication is disabled. Abrupt
                      disconnection of a streaming client might leave an orphaned
                      connection slot behind until a timeout is reached, so this parameter
                      should be set slightly higher than the maximum number of expected
                      clients so disconnected clients can immediately reconnect. Updating
                      MaxWALSenders will trigger a restart of the PostgreSQL instance.
                    type: integer
                  sharedBuffers:
                    default: 1024
                    description: SharedBuffers sets the amount of memory (usually
                      in 8KB) the database server uses for shared memory buffers.
                      If this value is specified without units, it is taken as blocks,
                      that is BLCKSZ bytes, typically 8kB. This setting must be at
                      least 128 kilobytes. However, settings significantly higher
                      than the minimum are usually needed for good performance. Updating
                      SharedBuffers will trigger a restart of the PostgreSQL instance.
                    type: integer
                  sslCiphers:
                    default: HIGH:MEDIUM:+3DES:!aNULL
                    description: SSLCiphers specifies the allowed SSL ciphers (https://www.postgresql.org/docs/13/runtime-config-connection.html#GUC-SSL-CIPHERS)
                    type: string
                  sslMinProtocolVersion:
                    default: TLSv1.2
                    description: SSLMinProtocolVersion sets the minimum SSL/TLS protocol
                      version to use
                    enum:
                    - TLSv1
                    - TLSv1.1
                    - TLSv1.2
                    - TLSv1.3
                    type: string
                  statementTimeoutMillis:
                    default: 0
                    description: StatementTimeoutMillis is the timeout in milliseconds
                      after which any statement that takes more than the specified
                      number is aborted. The counter is started from the time the
                      command arrives at the server from the client. If LogMinErrorStatement
                      statement is set to ERROR or lower, the statement that timed
                      out will also be logged. A value of zero (the default) turns
                      this off.
                    maximum: 2147483647
                    type: integer
                  synchronousCommit:
                    default: "on"
                    description: SynchronousCommit specifies whether transaction commit
                      will wait for WAL records to be written to disk before the command
                      returns a success indication to the client.
                    enum:
                    - "off"
                    - local
                    - remote_write
                    - remote_apply
                    - "on"
                    type: string
                  tempFileLimitKiloBytes:
                    default: -1
                    description: TempFileLimitKiloBytes specifies the maximum amount
                      of disk space that a process can use for temporary files, such
                      as sort and hash temporary files, or the storage file for a
                      held cursor.
                    maximum: 2147483647
                    minimum: -1
                    type: integer
                  trackIOTiming:
                    default: "off"
                    description: TrackIOTiming enables timing of database I/O calls.
                      This parameter is off by default, because it will repeatedly
                      query the operating system for the current time, which may cause
                      significant overhead on some platforms.
                    enum:
                    - "on"
                    - "off"
                    type: string
                  walWriterDelayMillis:
                    default: 200
                    description: WALWriterDelayMillis specifies the time (in milliseconds)
                      between WAL flushed performed in the WAL writer. After flushing
                      WAL the writer sleeps for the length of time given by WALWriterDelayMillis,
                      unless woken up sooner by an asynchronously committing transaction.
                    maximum: 10000
                    minimum: 1
                    type: integer
                type: object
              replicas:
                default: 1
                description: Replicas is the number of replicas of the data service
                  in the cluster. Replicas of the PostgreSQL resource will constitute
                  a streaming replication cluster. This value should be an odd number
                  (with the exception of the value 0) to ensure the resultant cluster
                  can establish quorum. Only scaling up is supported and not scaling
                  down of replicas.
                format: int32
                minimum: 0
                type: integer
              resources:
                default:
                  limits:
                    cpu: "2"
                    memory: 2Gi
                  requests:
                    cpu: "2"
                    memory: 2Gi
                description: Resources is the desired compute resource requirements
                  of PostgreSQL container within a pod in the cluster. Updating resources
                  causes the replicas of the PostgreSQL cluster to be killed and recreated
                  one at a time, which could potentially lead to downtime if something
                  goes wrong during the update.
                properties:
                  limits:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Limits describes the maximum amount of compute resources
                      allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                  requests:
                    additionalProperties:
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                      x-kubernetes-int-or-string: true
                    description: 'Requests describes the minimum amount of compute
                      resources required. If Requests is omitted for a container,
                      it defaults to Limits if that is explicitly specified, otherwise
                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/'
                    type: object
                type: object
              schedulingConstraints:
                description: SchedulingConstraints contains subfields that affect how the Pods of the Postgresql instance will be scheduled onto Kubernetes cluster nodes. The subfields map directly to Kubernetes API primitives such as node taints, tolerations, affinity and (anti)affinity. See the documentation of each subfield for more details. Together, the subfields of SchedulingConstraints allow you to express constraints such as "Pods of this Postgresql instance MUST be scheduled to different availability zones", or "Pods of this Postgresql instance SHOULD preferrably (but not mandatorily) be scheduled to nodes that have a SSD", and many more. As a warning, the subfields of SchedulingConstraints can interfere with each other, so when you set one of them you should consider how it will interact with the values that you set for other subfields.
                properties:
                  tolerations:
                    description: Tolerations is the list of tolerations that the Pods of the PostgreSQL instance will have with respect to the taints of the Kubernetes cluster nodes. It can be used to affect scheduling of the Pods of the PostgreSQL instance on the Kubernetes cluster nodes. More information at https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/ and https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.22/#toleration-v1-core . If you don't know what are the specific taints on the nodes of the Kubernetes cluster you're using, you should ask your cluster administrator. Updating this field will result in re-creation and re-scheduling of all the Pods of the PostgreSQL instance, so *there may be downtime*.
                    items:
                      description: The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
                          type: string
                      type: object
                    type: array
                type: object
              version:
                description: Version specifies the PostgreSQL version that the instance
                  should use. It is required to pick a version and it cannot be changed
                  afterwards, since major version upgrades are  currently unsupported.
                maximum: 14
                minimum: 13
                type: integer
              volumeSize:
                anyOf:
                - type: integer
                - type: string
                default: 1Gi
                description: 'VolumeSize sets the size of the persistent volume of
                  the PostgreSQL instance, the minimum size is 0.5Gi. The size is
                  to be specified as a plain integer or as a fixed-point number using
                  one of these suffixes: E, P, T, G, M, K, corresponding to kilo-,
                  mega-, gigabytes, etc. You can also use the power-of-two equivalents:
                  Ei, Pi, Ti, Gi, Mi, Ki, corresponding to kibi-, mebi-, gibibytes,
                  etc. For example  a value of "0.5Gi" corresponds to an instance
                  with a persistent volume of 0.5 gibibytes.'
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
            required:
            - version
            type: object
          status:
            description: PostgresqlStatus defines the observed state of Postgresql
            properties:
              clusterStatus:
                description: ClusterStatus is a summary of the current status of the
                  cluster. Careful, if ReadyReplicas < 'spec.Replicas' or `spec.Replicas`
                  == 0 the status equals "NotRunning".
                type: string
              error:
                type: string
              readyReplicas:
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: postgresql-leader-election-role
  namespace: a8s-system
rules:
- apiGroups:
  - ""
  - coordination.k8s.io
  resources:
  - configmaps
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: postgresql-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - list
  - watch
- apiGroups:
  - ""
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - secrets
  - serviceaccounts
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources:
  - statefulsets
  verbs:
  - create
  - get
  - list
  - update
  - watch
- apiGroups:
  - postgresql.anynines.com
  resources:
  - postgresqls
  verbs:
  - list
  - update
  - watch
- apiGroups:
  - postgresql.anynines.com
  resources:
  - postgresqls/status
  verbs:
  - get
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resourceNames:
  - postgresql-spilo-role
  resources:
  - clusterroles
  verbs:
  - bind
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: postgresql-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: postgresql-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: postgresql-spilo-role
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: postgresql-leader-election-rolebinding
  namespace: a8s-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: postgresql-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: a8s-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: postgresql-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: postgresql-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: a8s-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: postgresql-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: postgresql-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: a8s-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: b21ab9b4.anynines.com
kind: ConfigMap
metadata:
  name: postgresql-manager-config
  namespace: a8s-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
        app.kubernetes.io/name: postgresql-controller-manager
        app.kubernetes.io/part-of: a8s-postgres
        app.kubernetes.io/component: controller-manager
  name: postgresql-controller-manager-metrics-service
  namespace: a8s-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    app.kubernetes.io/name: postgresql-controller-manager
    app.kubernetes.io/part-of: a8s-postgres
    app.kubernetes.io/component: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-webhook-service
  namespace: a8s-system
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    app.kubernetes.io/name: postgresql-controller-manager
    app.kubernetes.io/part-of: a8s-postgres
    app.kubernetes.io/component: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
       app.kubernetes.io/name: postgresql-controller-manager
       app.kubernetes.io/part-of: a8s-postgres
       app.kubernetes.io/component: controller-manager
  name: postgresql-controller-manager
  namespace: a8s-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: postgresql-controller-manager
      app.kubernetes.io/part-of: a8s-postgres
      app.kubernetes.io/component: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgresql-controller-manager
        app.kubernetes.io/part-of: a8s-postgres
        app.kubernetes.io/component: controller-manager
      annotations:
        prometheus.io/port: "8443"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=7
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - postgresql-operator
        image: public.ecr.aws/w5n9a2g2/a9s-ds-for-k8s/dev/postgresql-operator:v0.24.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /config/images
          name: image-config
      securityContext:
        runAsUser: 65532
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - configMap:
          defaultMode: 420
          name: postgresql-images
        name: image-config
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: postgresql-serving-cert
  namespace: a8s-system
spec:
  dnsNames:
  - postgresql-webhook-service.a8s-system.svc
  - postgresql-webhook-service.a8s-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: postgresql-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: postgresql-selfsigned-issuer
  namespace: a8s-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: a8s-system/postgresql-serving-cert
  name: postgresql-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: postgresql-webhook-service
      namespace: a8s-system
      path: /validate-postgresql-anynines-com-v1alpha1-postgresql
  failurePolicy: Fail
  name: vpostgresql.kb.io
  rules:
  - apiGroups:
    - postgresql.anynines.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - postgresqls
  sideEffects: None
